{"version":3,"sources":["theme.js","components/GoogleMap.js","components/TreeInfoWindow.js","img/tree.svg","components/TreeIcon.js","components/TreeMarker.js","components/TreeMap.js","components/TreeAppBar.js","components/SpeedDials.js","components/Logo.js","components/FloatingNavgationBar.js","components/TreeDetail.js","components/TreeDetailDrawer.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","green","secondary","amber","accent","brown","main","text","typography","fontFamily","join","h3","fontWeight","h4","marginTop","marginBottom","useStyles","makeStyles","googleMap","width","height","cursor","zIndex","GoogleMap","children","props","classes","className","bootstrapURLKeys","key","options","draggableCursor","defaultProps","card","maxWidth","media","TreeInfoWindow","tree","onLearnMoreClick","Card","showStatus","showThumbs","centerMode","swipeable","aspectRatio","alt","chineseTreeName","disableSpinner","src","id","CardContent","Typography","variant","growthFrom","gutterBottom","englishTreeName","split","color","component","CardActions","Button","size","href","target","onClick","scientificTreeName","season","isCommon","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref","svgRef","title","enableBackground","viewBox","ref","ForwardRef","forwardRef","marker","TreeIcon","SvgIcon","TreeSvg","TreeMarker","show","useState","anchorEl","setAnchorEl","open","setOpen","undefined","handleMouseLeave","event","onMouseLeave","currentTarget","onMouseEnter","Popper","transition","TransitionProps","Fade","ntuLocation","NTU_CENTER","TreeMap","trees","defaultZoom","defaultCenter","isEmpty","map","lat","lng","menuButton","marginRight","spacing","flexGrow","speedDial","margin","backdrop","pointerEvents","speedDialSelected","SpeedDials","icon","type","actions","onActionClick","React","direction","hidden","handleClick","e","actionValue","capitalize","value","Backdrop","SpeedDial","ariaLabel","style","onClose","onOpen","FabProps","action","SpeedDialAction","name","tooltipTitle","logo","Logo","padding","borderRadius","contrastText","floatingNavgationBar","display","alignItems","flexDirection","position","marginLeft","titleLogo","FloatingNavgationBar","filter","onFilterChange","Zoom","in","Fab","aria-label","deepOrange","lightBlue","red","detail","divider","SimpleListItem","button","ListItem","ListItemIcon","ListItemText","TreeDetail","Container","role","paragraph","Divider","List","dense","treePlaceholder","co","createTime","treeHeight","treeCrownHeight","treePath","treePerimeter","determineSeason","seasonSpring","seasonSummer","TreeDetailDrawer","top","left","bottom","right","Drawer","anchor","root","App","drawerOpen","setDrawerOpen","selectedTree","setSelectedTree","setTrees","setFilter","useEffect","fetch","then","response","ok","json","Error","jsonResponse","newTrees","rows","slice","forEach","Math","random","catch","error","alert","ThemeProvider","CssBaseline","Box","newFilter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.efe1aa3c.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport brown from '@material-ui/core/colors/brown';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n        secondary: amber,\r\n        accent: {...brown, \r\n            main: brown[500],\r\n        },\r\n        text: {\r\n            primary: '#424242',\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            'Roboto',\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            '\"Noto Sans TC\"',\r\n            '\"Noto Sans CJK TC\"',\r\n            '\"LiHei Pro\"',\r\n            '\"Heiti TC\"',\r\n            '\"Microsoft JhengHei\"',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        h3: {\r\n            fontWeight: '500'\r\n        },\r\n        h4: {\r\n            marginTop: '40px',\r\n            marginBottom: '16px',\r\n            fontWeight: '500'\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst useStyles = makeStyles({\r\n    googleMap: {\r\n        width: '100%',\r\n        height: '100%',\r\n        cursor: 'initial',\r\n        '& div': {\r\n            zIndex: '0',\r\n        },\r\n    },\r\n});\r\n\r\nfunction GoogleMap({ children, ...props }) {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.googleMap}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={process.env.NODE_ENV === 'production' && {\r\n                    key: \"AIzaSyDU6n5BvjKz-itsG7Epkf-TOp6BfTG7E2o\",\r\n                }}\r\n                options={{\r\n                    draggableCursor: 'initial'\r\n                }}\r\n                {...props}\r\n            >\r\n                {children}\r\n            </GoogleMapReact>\r\n        </div>\r\n    )\r\n}\r\n\r\nGoogleMap.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.node,\r\n        PropTypes.arrayOf(PropTypes.node),\r\n    ]),\r\n};\r\n\r\nGoogleMap.defaultProps = {\r\n    children: null,\r\n};\r\n\r\nexport default GoogleMap;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n// lazyload placeholder\r\nimport Image from 'material-ui-image'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: '345px',\r\n        maxWidth: '100vw',\r\n        // position: 'relative',\r\n        // zIndex: '5000',\r\n        // right: '170px',\r\n\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nfunction TreeInfoWindow({ tree, onLearnMoreClick }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    function handleLearnMoreClick() {\r\n        onLearnMoreClick(tree)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <Carousel\r\n                width=\"345px\"\r\n                height=\"140px\"\r\n                showStatus={false}\r\n                showThumbs={false}\r\n                centerMode\r\n                swipeable\r\n            >\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 0}`}\r\n                />\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 1}`}\r\n                />\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 2}`}\r\n                />\r\n            </Carousel>\r\n            <CardContent>\r\n                <Typography variant=\"outline\">\r\n                    {tree.growthFrom}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"h5\">\r\n                    {tree.chineseTreeName + \" \" + tree.englishTreeName.split(',')[0]}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {`${tree.chineseTreeName}是一種${tree.growthFrom}，樹必定會成為未來世界的新標準。 我們不得不面對一個非常尷尬的事實，那就是，領悟其中的道理也不是那麼的困難。`}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    href=\"https://giving.ntu.edu.tw/DonationFormTW.aspx?lang=TW\"\r\n                    target=\"_blank\"\r\n                >\r\n                    保護我\r\n                </Button>\r\n                <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    onClick={handleLearnMoreClick}\r\n                >\r\n                    了解更多\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nTreeInfoWindow.propTypes = {\r\n    tree: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        chineseTreeName: PropTypes.string,\r\n        englishTreeName: PropTypes.string,\r\n        scientificTreeName: PropTypes.string,\r\n        growthFrom: PropTypes.string,\r\n        season: PropTypes.string,\r\n        isCommon: PropTypes.bool,\r\n    }).isRequired,\r\n};\r\n\r\nTreeInfoWindow.defaultProps = {\r\n    tree: {\r\n        id: 0,\r\n        chineseTreeName: '克利巴椰子',\r\n        englishTreeName: 'Giriba Palm, Queen Palm',\r\n        scientificTreeName: 'Syagrus romanzoffiana',\r\n        growthFrom: '喬木',\r\n        season: 'spring',\r\n        isCommon: true,\r\n    }\r\n};\r\nexport default TreeInfoWindow","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m288.134 497h-64.268c-8.284 0-15-6.716-15-15v-91.94c0-8.284 6.716-15 15-15h64.268c8.284 0 15 6.716 15 15v91.94c0 8.284-6.716 15-15 15z\",\n  fill: \"#d26432\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m303.134 482v-91.94c0-8.284-6.716-15-15-15h-32.134v121.94h32.134c8.284 0 15-6.716 15-15z\",\n  fill: \"#a54628\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 415.6c-19.251 0-37.833-8.272-49.922-21.487-17.081 5.394-37.308 3.265-53.978-6.358-16.666-9.621-28.624-26.075-32.492-43.567-17.489-3.864-33.944-15.819-43.57-32.486-9.624-16.671-11.751-36.901-6.352-53.984-13.213-12.093-21.486-30.675-21.486-49.918 0-19.247 8.271-37.83 21.485-49.924-5.401-17.081-3.274-37.311 6.353-53.979 9.624-16.67 26.079-28.629 43.57-32.494 3.868-17.492 15.826-33.946 32.491-43.567 16.666-9.621 36.894-11.749 53.978-6.351 12.087-13.214 30.669-21.485 49.923-21.485s37.836 8.271 49.923 21.485c17.084-5.397 37.311-3.271 53.977 6.351s28.624 26.076 32.492 43.568c17.492 3.863 33.946 15.822 43.572 32.497 9.625 16.665 11.752 36.894 6.351 53.975 13.214 12.094 21.485 30.677 21.485 49.924 0 19.243-8.272 37.825-21.486 49.918 5.399 17.083 3.272 37.313-6.351 53.982-9.626 16.668-26.083 28.624-43.571 32.488-3.868 17.492-15.826 33.947-32.492 43.567-16.669 9.623-36.897 11.752-53.978 6.358-12.09 13.216-30.671 21.487-49.922 21.487z\",\n  fill: \"#87e752\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 415.6v-415.6c19.254 0 37.836 8.271 49.923 21.485 17.084-5.397 37.311-3.271 53.977 6.351s28.624 26.076 32.492 43.568c17.492 3.863 33.946 15.822 43.572 32.497 9.625 16.665 11.752 36.894 6.351 53.975 13.214 12.094 21.485 30.677 21.485 49.924 0 19.243-8.272 37.825-21.486 49.918 5.399 17.083 3.272 37.313-6.351 53.982-9.626 16.668-26.083 28.624-43.571 32.488-3.868 17.492-15.826 33.947-32.492 43.567-16.669 9.623-36.897 11.752-53.978 6.358-12.09 13.216-30.671 21.487-49.922 21.487z\",\n  fill: \"#4ec95f\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m368.467 512h-224.934c-8.284 0-15-6.716-15-15s6.716-15 15-15h224.934c8.284 0 15 6.716 15 15s-6.716 15-15 15z\",\n  fill: \"#c8ff50\"\n}), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m160.667 159.6c-8.284 0-15-6.716-15-15 0-25.989 21.144-47.133 47.133-47.133 8.284 0 15 6.716 15 15s-6.716 15-15 15c-9.447 0-17.133 7.686-17.133 17.133 0 8.284-6.716 15-15 15z\",\n  fill: \"#4ec95f\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m192.8 318.133c-25.989 0-47.133-21.144-47.133-47.133 0-8.284 6.716-15 15-15s15 6.716 15 15c0 9.447 7.686 17.133 17.133 17.133 8.284 0 15 6.716 15 15s-6.716 15-15 15z\",\n  fill: \"#4ec95f\"\n}), /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#14aa6b\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m351.333 159.6c-8.284 0-15-6.716-15-15 0-9.447-7.686-17.133-17.133-17.133-8.284 0-15-6.716-15-15s6.716-15 15-15c25.989 0 47.133 21.144 47.133 47.133 0 8.284-6.716 15-15 15z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m319.2 318.133c-8.284 0-15-6.716-15-15s6.716-15 15-15c9.447 0 17.133-7.686 17.133-17.133 0-8.284 6.716-15 15-15s15 6.716 15 15c0 25.989-21.144 47.133-47.133 47.133z\"\n}))), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m383.467 497c0-8.284-6.716-15-15-15h-112.467v30h112.467c8.284 0 15-6.716 15-15z\",\n  fill: \"#87e752\"\n}));\n\nvar SvgTree = function SvgTree(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    enableBackground: \"new 0 0 512 512\",\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTree, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/tree.ef3cb157.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { ReactComponent as TreeSvg } from '../img/tree.svg';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    marker: {\r\n        cursor: 'pointer',\r\n    },\r\n})\r\n\r\n\r\nfunction TreeIcon(props) {\r\n    return (\r\n        <SvgIcon\r\n            component={TreeSvg}\r\n            viewBox=\"0 0 600 476.6\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TreeIcon","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport TreeInfoWindow from './TreeInfoWindow'\r\nimport PropTypes from 'prop-types';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport TreeIcon from './TreeIcon';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    marker: {\r\n        cursor: 'pointer',\r\n    },\r\n})\r\n\r\n\r\n\r\n// Marker component\r\nfunction TreeMarker({ show, tree, onLearnMoreClick }) {\r\n    const classes = useStyles()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const id = open ? 'transitions-popper' : undefined;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpen(true)\r\n        onLearnMoreClick(tree)\r\n    };\r\n    const handleMouseEnter = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n        setOpen(true)\r\n    }\r\n    const handleMouseLeave = (event) => {\r\n        setAnchorEl(null)\r\n        setOpen(false)\r\n    }\r\n\r\n    if (!show) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onMouseLeave={handleMouseLeave}\r\n        >\r\n\r\n\r\n            <TreeIcon\r\n                className={classes.marker}\r\n                color={open ? \"secondary\" : \"primary\"}\r\n                onClick={handleClick}\r\n                onMouseEnter={handleMouseEnter}\r\n            />\r\n\r\n            <Popper id={id} open={open} anchorEl={anchorEl} transition={true}>\r\n                {({ TransitionProps }) => (\r\n                    <Fade {...TransitionProps} >\r\n                        <div>\r\n                            <TreeInfoWindow\r\n                                tree={tree}\r\n                                onMouseLeave={handleMouseLeave}\r\n                                onLearnMoreClick={onLearnMoreClick}\r\n                            />\r\n                        </div>\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n        </div>\r\n    );\r\n};\r\n\r\nTreeMarker.propTypes = {\r\n    show: PropTypes.bool,\r\n    place: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        formatted_address: PropTypes.string,\r\n        rating: PropTypes.number,\r\n        types: PropTypes.array,\r\n        price_level: PropTypes.number,\r\n        opening_hours: PropTypes.object,\r\n    }).isRequired,\r\n};\r\n\r\n\r\nexport default TreeMarker","import React, { useState, useEffect } from 'react';\r\nimport isEmpty from 'lodash.isempty';\r\n\r\n// examples:\r\nimport GoogleMap from './GoogleMap';\r\n\r\n// component\r\n\r\n// my component\r\nimport TreeMarker from './TreeMarker'\r\n\r\nconst ntuLocation = {\r\n    center: {\r\n        lat: 25.017319,\r\n        lng: 121.538977\r\n    },\r\n    zoom: 16,\r\n}\r\nconst NTU_CENTER = [25.017319, 121.538977]\r\n\r\nfunction TreeMap({ trees, onLearnMoreClick }) {\r\n\r\n\r\n    // // onChildClick callback can take two arguments: key and childProps\r\n    // function onChildClickCallback(key) {\r\n    //     const index = trees.findIndex(e => e.id === key);\r\n    //     let newTrees = trees\r\n    //     newTrees[index].show = !newTrees[index].show; // eslint-disable-line no-param-reassign\r\n    //     setTrees(newTrees)\r\n    // };\r\n\r\n    // function onChildMouseEnterCallback(key) {\r\n    //     const index = trees.findIndex(e => e.id === key);\r\n    //     let newTrees = trees\r\n    //     newTrees[index].show = true // eslint-disable-line no-param-reassign\r\n    //     console.log(newTrees)\r\n    //     setTrees(newTrees)\r\n    // };\r\n\r\n    // function onChildMouseLeaveCallback(key) {\r\n    //     const index = trees.findIndex(e => e.id === key);\r\n    //     let newTrees = trees\r\n    //     newTrees[index].show = false // eslint-disable-line no-param-reassign\r\n    //     console.log(newTrees)\r\n    //     setTrees(newTrees)\r\n    // };\r\n\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultZoom={ntuLocation.zoom}\r\n            defaultCenter={NTU_CENTER}\r\n        >\r\n            {!isEmpty(trees) && trees.map(tree =>\r\n                (<TreeMarker\r\n                    key={tree.id}\r\n                    lat={tree.lat}\r\n                    lng={tree.lng}\r\n                    show={true}\r\n                    tree={tree}\r\n                    onLearnMoreClick={onLearnMoreClick}\r\n                />))}\r\n        </GoogleMap>\r\n    );\r\n}\r\n\r\nexport default TreeMap;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function TreeAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    臺大樹語\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport capitalize from 'lodash/capitalize'\r\n\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    speedDial: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.speedDial + 1,\r\n        pointerEvents: 'none',\r\n    },\r\n}));\r\n\r\nconst speedDialSelected = {\r\n    zIndex: 1052,\r\n}\r\n\r\nexport default function SpeedDials({ icon, type, actions, onActionClick }) {\r\n    const classes = useStyles();\r\n    const [direction, setDirection] = React.useState('right');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [hidden, setHidden] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClick = (e, actionValue) => {\r\n        onActionClick({ type: type + capitalize(actionValue), value: \"on\" })\r\n    }\r\n    return (\r\n        <>\r\n            <Backdrop\r\n                className={classes.backdrop}\r\n                open={open}\r\n            />\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial example\"\r\n                className={classes.speedDial}\r\n                style={open ? speedDialSelected : null}\r\n                hidden={hidden}\r\n                icon={icon}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                open={open}\r\n                direction={direction}\r\n                FabProps={{\r\n                    variant: true ? \"extended\" : \"round\",\r\n                    children: \"asdsadasd\",\r\n                    color: 'secondary',\r\n                    onClick: (e) => handleClick(e, actions[0].value),\r\n\r\n                }}\r\n            >\r\n                {actions.map((action) => (\r\n                    <SpeedDialAction\r\n                        key={action.name}\r\n                        icon={action.icon}\r\n                        tooltipTitle={action.name}\r\n                        onClick={(e) => handleClick(e, action.value)}\r\n                    />\r\n                ))}\r\n            </SpeedDial>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nSpeedDials.defaultProps = {\r\n    actions: [],\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        width: 48,\r\n        height: 48,\r\n        marginRight: theme.spacing(1),\r\n    }\r\n\r\n}));\r\n\r\nfunction Logo(props) {\r\n    const classes = useStyles()\r\n    return (\r\n        <img\r\n            {...props}\r\n            className={classes.logo}\r\n            src=\"https://image.flaticon.com/icons/png/512/2990/2990684.png\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default Logo","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// components\r\nimport NatureIcon from '@material-ui/icons/Nature'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { lightBlue, deepOrange, amber, red } from '@material-ui/core/colors';\r\n\r\n// season icons\r\nimport EcoIcon from '@material-ui/icons/EcoOutlined';\r\nimport SpaIcon from '@material-ui/icons/SpaOutlined';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunnyOutlined';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnitOutlined';\r\n\r\n// area icons\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport OpacityIcon from '@material-ui/icons/Opacity';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCityOutlined';\r\nimport LocalHospitalOutlinedIcon from '@material-ui/icons/LocalHospitalOutlined';\r\n\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n// my components\r\nimport SpeedDials from './SpeedDials'\r\nimport { Typography } from '@material-ui/core';\r\nimport Logo from './Logo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        padding: theme.spacing(1, 3),\r\n        borderRadius: 64,\r\n        zIndex: 100,\r\n        color: theme.palette.primary.contrastText,\r\n    },\r\n    floatingNavgationBar: {\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        marginTop: theme.spacing(2),\r\n        marginLeft: theme.spacing(2),\r\n    },\r\n    titleLogo: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        color: theme.palette.accent.main\r\n    }\r\n\r\n}));\r\n\r\nexport default function FloatingNavgationBar({ filter, onFilterChange }) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <div className={classes.floatingNavgationBar}>\r\n            <Zoom in={true}>\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    aria-label=\"title\"\r\n                    className={classes.title}\r\n                    onClick={() => onFilterChange({ type: 'all', value: 'on' })}\r\n                >\r\n                    {/* <NatureIcon /> */}\r\n                    <Logo className={classes.titleLogo} />\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        臺大樹語\r\n                    </Typography>\r\n                </Fab>\r\n            </Zoom>\r\n            <SpeedDials\r\n                type=\"common\"\r\n                icon={<NatureIcon className={classes.icon} />}\r\n                onActionClick={onFilterChange}\r\n                actions={[\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '大王椰子' },\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '樟樹' },\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '白千層' },\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '正榕' },\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '臺灣欒樹' },\r\n                ]}\r\n            />\r\n            <SpeedDials\r\n                type=\"season\"\r\n                icon={<EcoIcon className={classes.icon} />}\r\n                onActionClick={onFilterChange}\r\n                actions={[\r\n                    { icon: <EcoIcon color=\"primary\" />, name: '春天', value: 'spring' },\r\n                    { icon: <WbSunnyIcon style={{ color: amber[700] }} />, name: '夏天', value: 'summer' },\r\n                    { icon: <SpaIcon style={{ color: deepOrange[700] }} />, name: '秋天', value: 'autumn' },\r\n                    { icon: <AcUnitIcon style={{ color: lightBlue[500] }} />, name: '冬天', value: 'winter' },\r\n                ]}\r\n            />\r\n            <SpeedDials\r\n                type=\"area\"\r\n                icon={<StreetviewIcon className={classes.icon} />}\r\n                onActionClick={onFilterChange}\r\n                actions={[\r\n                    { icon: <LocationCityIcon style={{ color: deepOrange[200] }} />, name: '總區' },\r\n                    { icon: <OpacityIcon style={{ color: lightBlue[500] }} />, name: '水源' },\r\n                    { icon: <LocalHospitalOutlinedIcon style={{ color: red[500] }} />, name: '城中' },\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// components\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Container from '@material-ui/core/Container'\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\n\r\n// icons\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport HeightIcon from '@material-ui/icons/Height';\r\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\nimport PowerInputIcon from '@material-ui/icons/PowerInput';\r\nimport StyleIcon from '@material-ui/icons/Style';\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport EcoIcon from '@material-ui/icons/EcoOutlined';\r\n\r\n// carousel\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n// lazyload placeholder\r\nimport Image from 'material-ui-image'\r\n\r\n// my components\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    detail: {\r\n        marginTop: theme.spacing(2),\r\n        width: 400,\r\n    },\r\n    divider: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    icon: {\r\n        color: theme.palette.primary.main\r\n    }\r\n\r\n}));\r\n\r\nfunction SimpleListItem({ button = false, icon, color = \"primary\", primary }) {\r\n    const classes = useStyles()\r\n    return (\r\n        <ListItem button={button}>\r\n            <ListItemIcon className={classes.icon}>\r\n                {icon}\r\n            </ListItemIcon>\r\n            <ListItemText primary={primary} />\r\n        </ListItem>\r\n    )\r\n}\r\nexport default function TreeDetail({ tree }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Carousel\r\n                width=\"400px\"\r\n                height=\"225px\"\r\n                showStatus={false}\r\n                showThumbs={false}\r\n                centerMode\r\n                swipeable\r\n            >\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 0}`}\r\n                />\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 1}`}\r\n                />\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 2}`}\r\n                />\r\n            </Carousel>\r\n\r\n            <Container\r\n                className={classes.detail}\r\n                role=\"presentation\"\r\n            >\r\n                <Typography gutterBottom variant=\"h5\">\r\n                    {tree.chineseTreeName + \" \" + tree.englishTreeName.split(',')[0]}\r\n                </Typography>\r\n\r\n                <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\r\n                    {`${tree.chineseTreeName}是一種${tree.growthFrom}，\\\r\n                    樹必定會成為未來世界的新標準。 我們不得不面對一個非常尷尬的事實，\\\r\n                    那就是，領悟其中的道理也不是那麼的困難。`}\r\n                </Typography>\r\n\r\n                <Divider className={classes.divider} />\r\n\r\n                <Typography variant=\"subtitle2\">\r\n                    樹木資訊\r\n                    </Typography>\r\n                <List dense aria-label=\"tree-detail\">\r\n                    <SimpleListItem\r\n                        button={true}\r\n                        icon={<LocalOfferIcon className={classes.icon} />}\r\n                        primary={treePlaceholder.co}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<TodayIcon className={classes.icon} />}\r\n                        primary={`調查時間：${treePlaceholder.createTime}`}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<HeightIcon className={classes.icon} />}\r\n                        primary={`樹高：${treePlaceholder.treeHeight}`}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<ZoomOutMapIcon className={classes.icon} />}\r\n                        primary={`樹冠幅：${treePlaceholder.treeCrownHeight}`}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<PowerInputIcon className={classes.icon} />}\r\n                        primary={`胸徑：${treePlaceholder.treePath}`}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<RotateLeftIcon className={classes.icon} />}\r\n                        primary={`周長：${treePlaceholder.treePerimeter}`}\r\n                    />\r\n                </List>\r\n\r\n                <Divider className={classes.divider} />\r\n\r\n                <Typography variant=\"subtitle2\">\r\n                    樹種小百科\r\n                </Typography>\r\n                <List aria-label=\"tree-catagory-info\">\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <StyleIcon className={classes.icon} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary={tree.growthFrom}\r\n                        />\r\n                    </ListItem>\r\n                    <ListItem >\r\n                        <ListItemIcon>\r\n                            <TranslateIcon className={classes.icon} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"英文名\"\r\n                            secondary={tree.englishTreeName}\r\n                        />\r\n                    </ListItem>\r\n                    <ListItem >\r\n                        <ListItemIcon>\r\n                            <MenuBookIcon className={classes.icon} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"學名\"\r\n                            secondary={tree.scientificTreeName}\r\n                        />\r\n                    </ListItem>\r\n                    <SimpleListItem\r\n                        button={true}\r\n                        icon={<EcoIcon className={classes.icon} />}\r\n                        primary={determineSeason(tree)}\r\n                    />\r\n                </List>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction determineSeason(tree) {\r\n    if (tree.seasonSpring === \"on\") {\r\n        return '春季'\r\n    } else if (tree.seasonSummer === \"on\") {\r\n        return '夏季'\r\n    } else if (tree.seasonSummer === \"on\") {\r\n        return '秋季'\r\n    } else if (tree.seasonSummer === \"on\") {\r\n        return '冬季'\r\n    } else {\r\n        return '非季節性'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst treePlaceholder = {\r\n    id: 0,\r\n    chineseTreeName: '克利巴椰子',\r\n    englishTreeName: 'Giriba Palm, Queen Palm',\r\n    scientificTreeName: 'Syagrus romanzoffiana',\r\n    growthFrom: '喬木',\r\n    season: 'spring',\r\n    isCommon: true,\r\n    co: \"N 1-10_0205\",\r\n    createTime: \"2012-05-06T02:23:11.000Z\",\r\n    treeHeight: \"11.24\",\r\n    treeCrownHeight: \"11.4728\",\r\n    treePath: \"29.921\",\r\n    treePerimeter: \"94\",\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\n\r\n\r\n// my components\r\nimport TreeDetail from './TreeDetail'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   \r\n}))\r\n\r\nexport default function TreeDetailDrawer({ open, onClose, tree }) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    if (tree === null) {\r\n        return <></>\r\n    }\r\n    return (\r\n        <div>\r\n            <Drawer anchor=\"left\" open={open} onClose={onClose}>\r\n                <TreeDetail tree={tree} />\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nTreeDetailDrawer.propTypes = {\r\n    tree: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        chineseTreeName: PropTypes.string,\r\n        englishTreeName: PropTypes.string,\r\n        scientificTreeName: PropTypes.string,\r\n        growthFrom: PropTypes.string,\r\n        season: PropTypes.string,\r\n        isCommon: PropTypes.bool,\r\n    }).isRequired,\r\n};\r\n\r\nTreeDetailDrawer.defaultProps = {\r\n    tree: {\r\n        id: 0,\r\n        chineseTreeName: '克利巴椰子',\r\n        englishTreeName: 'Giriba Palm, Queen Palm',\r\n        scientificTreeName: 'Syagrus romanzoffiana',\r\n        growthFrom: '喬木',\r\n        season: 'spring',\r\n        isCommon: true,\r\n        co: \"N 1-10_0205\",\r\n        createTime: \"2012-05-06T02:23:11.000Z\",\r\n        treeHeight: \"11.24\",\r\n        treeCrownHeight: \"11.4728\",\r\n        treePath: \"29.921\",\r\n        treePerimeter: \"94\",\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from './theme'\r\n\r\n// style\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// components \r\nimport Box from '@material-ui/core/Box'\r\n\r\n// my components\r\nimport TreeMap from './components/TreeMap';\r\nimport TreeAppBar from './components/TreeAppBar'\r\nimport FloatingNavgationBar from './components/FloatingNavgationBar'\r\nimport TreeDetailDrawer from './components/TreeDetailDrawer'\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '100vw',\r\n\t\theight: '100vh',\r\n\t},\r\n\tmain: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t}\r\n});\r\n\r\nconst ntuLocation = {\r\n\tcenter: {\r\n\t\tlat: 25.017319,\r\n\t\tlng: 121.538977\r\n\t},\r\n\tzoom: 16,\r\n}\r\n\r\nfunction App() {\r\n\tconst classes = useStyles()\r\n\tconst [drawerOpen, setDrawerOpen] = useState(false)\r\n\tconst [selectedTree, setSelectedTree] = useState(null)\r\n\r\n\tconst [trees, setTrees] = useState([])\r\n\tconst [filter, setFilter] = useState({ type: \"all\", value: \"on\" })\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(process.env.NODE_ENV === 'production' ? 'trees.json' : 'final/trees.json')\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response.json()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('get trees failed')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((jsonResponse) => {\r\n\t\t\t\tlet newTrees = jsonResponse.rows\r\n\r\n\t\t\t\tif (filter.type !== 'all') {\r\n\t\t\t\t\tnewTrees = newTrees.filter(tree => {\r\n\t\t\t\t\t\tif (tree[filter.type] === filter.value) {\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tnewTrees = newTrees.slice(0, 50)\r\n\r\n\t\t\t\tnewTrees.forEach((tree) => {\r\n\t\t\t\t\ttree.lat = ntuLocation.center.lat + (Math.random() - 0.5) * 0.01\r\n\t\t\t\t\ttree.lng = ntuLocation.center.lng + (Math.random() - 0.5) * 0.01\r\n\t\t\t\t});\r\n\t\t\t\tsetTrees(newTrees)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\talert(error)\r\n\t\t\t})\r\n\t}, [filter])\r\n\r\n\tfunction openTreeDetail(tree) {\r\n\t\tsetDrawerOpen(true)\r\n\t\tsetSelectedTree(tree)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Box className={classes.root}>\r\n\t\t\t\t{/* <TreeAppBar /> */}\r\n\t\t\t\t<Box className={classes.main} component=\"main\">\r\n\t\t\t\t\t<FloatingNavgationBar\r\n\t\t\t\t\t\tfilter={filter}\r\n\t\t\t\t\t\tonFilterChange={(newFilter) => setFilter(newFilter)} />\r\n\t\t\t\t\t<TreeMap\r\n\t\t\t\t\t\tonLearnMoreClick={openTreeDetail}\r\n\t\t\t\t\t\ttrees={trees}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TreeDetailDrawer\r\n\t\t\t\t\t\topen={drawerOpen}\r\n\t\t\t\t\t\tonClose={() => setDrawerOpen(false)}\r\n\t\t\t\t\t\ttree={selectedTree}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</ThemeProvider>\r\n\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}