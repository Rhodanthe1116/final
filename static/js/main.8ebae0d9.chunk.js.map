{"version":3,"sources":["theme.js","components/GoogleMap.js","components/TreeInfoWindow.js","img/tree.svg","components/TreeIcon.js","components/TreeMarker.js","components/AddressForm.js","components/PaymentForm.js","components/Review.js","components/DonateDialog.js","components/TreeMap.js","components/SpeedDials.js","components/Logo.js","components/FloatingNavgationBar.js","components/TreeDetail.js","components/TreeDetailDrawer.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","green","secondary","amber","accent","brown","main","text","typography","fontFamily","join","h3","fontWeight","h4","marginTop","marginBottom","useStyles","makeStyles","googleMap","width","height","cursor","zIndex","GoogleMap","children","props","classes","className","bootstrapURLKeys","key","options","draggableCursor","defaultProps","card","maxWidth","media","TreeInfoWindow","tree","onDonateClick","onLearnMoreClick","Card","showStatus","showThumbs","centerMode","swipeable","aspectRatio","alt","chineseTreeName","disableSpinner","src","id","CardContent","Typography","variant","growthFrom","gutterBottom","englishTreeName","split","color","component","CardActions","Button","size","onClick","scientificTreeName","season","isCommon","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref","svgRef","title","enableBackground","viewBox","ref","ForwardRef","forwardRef","TreeIcon","SvgIcon","TreeSvg","marker","TreeMarker","show","useState","anchorEl","setAnchorEl","open","setOpen","undefined","handleMouseLeave","event","onMouseLeave","currentTarget","onMouseEnter","Popper","transition","TransitionProps","Fade","AddressForm","Fragment","Grid","container","spacing","item","xs","sm","TextField","required","name","label","fullWidth","autoComplete","FormControlLabel","control","Checkbox","value","PaymentForm","md","helperText","addresses","payments","detail","listItem","padding","total","Review","List","disablePadding","ListItem","ListItemText","direction","map","payment","layout","marginLeft","marginRight","breakpoints","up","paper","paddingBottom","stepper","buttons","display","justifyContent","button","steps","DonateDialog","onClose","React","activeStep","setActiveStep","Dialog","aria-labelledby","DialogContent","align","Stepper","Step","StepLabel","step","Error","getStepContent","ntuLocation","NTU_CENTER","TreeMap","trees","donate","setDonate","donatedTree","setDonatedTree","donateTree","defaultZoom","defaultCenter","isEmpty","lat","lng","speedDial","margin","backdrop","pointerEvents","speedDialSelected","SpeedDials","icon","type","actions","onActionClick","hidden","handleClick","e","actionValue","capitalize","Backdrop","SpeedDial","ariaLabel","style","onOpen","FabProps","action","SpeedDialAction","tooltipTitle","logo","Logo","borderRadius","contrastText","floatingNavgationBar","alignItems","flexDirection","position","titleLogo","FloatingNavgationBar","filter","onFilterChange","Zoom","in","Fab","aria-label","deepOrange","lightBlue","red","divider","treeDetail","textOverflow","SimpleListItem","ListItemIcon","TreeDetail","treeDetailFallback","setTreeDetail","useEffect","fetch","then","response","ok","json","jsonResponse","newTreeDetail","query","pages","extract","substring","catch","console","log","$","each","attr","len","Container","role","paragraph","Divider","dense","treePlaceholder","co","createTime","treeHeight","treeCrownHeight","treePath","treePerimeter","determineSeason","seasonSpring","seasonSummer","drawer","TreeDetailDrawer","top","left","bottom","right","Drawer","anchor","root","App","drawerOpen","setDrawerOpen","selectedTree","setSelectedTree","setTrees","setFilter","error","setError","proxyurl","newTrees","rows","slice","forEach","Math","random","toString","ThemeProvider","CssBaseline","Box","newFilter","CircularProgress","Snackbar","autoHideDuration","Alert","severity","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8ebae0d9.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport brown from '@material-ui/core/colors/brown';\r\nimport amber from '@material-ui/core/colors/amber';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n        secondary: amber,\r\n        accent: {...brown, \r\n            main: brown[500],\r\n        },\r\n        text: {\r\n            primary: '#424242',\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            'Roboto',\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            '\"Noto Sans TC\"',\r\n            '\"Noto Sans CJK TC\"',\r\n            '\"LiHei Pro\"',\r\n            '\"Heiti TC\"',\r\n            '\"Microsoft JhengHei\"',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        h3: {\r\n            fontWeight: '500'\r\n        },\r\n        h4: {\r\n            marginTop: '40px',\r\n            marginBottom: '16px',\r\n            fontWeight: '500'\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst useStyles = makeStyles({\r\n    googleMap: {\r\n        width: '100%',\r\n        height: '100%',\r\n        cursor: 'initial',\r\n        '& div': {\r\n            zIndex: '0',\r\n        },\r\n    },\r\n});\r\n\r\nfunction GoogleMap({ children, ...props }) {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.googleMap}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={process.env.NODE_ENV === 'production' && {\r\n                    key: \"AIzaSyDU6n5BvjKz-itsG7Epkf-TOp6BfTG7E2o\",\r\n                }}\r\n                options={{\r\n                    draggableCursor: 'initial'\r\n                }}\r\n                {...props}\r\n            >\r\n                {children}\r\n            </GoogleMapReact>\r\n        </div>\r\n    )\r\n}\r\n\r\nGoogleMap.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.node,\r\n        PropTypes.arrayOf(PropTypes.node),\r\n    ]),\r\n};\r\n\r\nGoogleMap.defaultProps = {\r\n    children: null,\r\n};\r\n\r\nexport default GoogleMap;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n// lazyload placeholder\r\nimport Image from 'material-ui-image'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: '345px',\r\n        maxWidth: '100vw',\r\n        // position: 'relative',\r\n        // zIndex: '5000',\r\n        // right: '170px',\r\n\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nfunction TreeInfoWindow({ tree, onDonateClick, onLearnMoreClick }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    function handleDonateClick() {\r\n        onDonateClick(tree)\r\n    }\r\n\r\n    function handleLearnMoreClick() {\r\n        onLearnMoreClick(tree)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <Carousel\r\n                width=\"345px\"\r\n                height=\"140px\"\r\n                showStatus={false}\r\n                showThumbs={false}\r\n                centerMode\r\n                swipeable\r\n            >\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 0}`}\r\n                />\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 1}`}\r\n                />\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 2}`}\r\n                />\r\n            </Carousel>\r\n            <CardContent>\r\n                <Typography variant=\"outline\">\r\n                    {tree.growthFrom}\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"h5\">\r\n                    {tree.chineseTreeName + \" \" + tree.englishTreeName.split(',')[0]}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {`${tree.chineseTreeName}是一種${tree.growthFrom}，樹必定會成為未來世界的新標準。 我們不得不面對一個非常尷尬的事實，那就是，領悟其中的道理也不是那麼的困難。`}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    onClick={handleDonateClick}\r\n                    // href=\"https://giving.ntu.edu.tw/DonationFormTW.aspx?lang=TW\"\r\n                    // target=\"_blank\"\r\n                >\r\n                    保護我\r\n                </Button>\r\n                <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    onClick={handleLearnMoreClick}\r\n                >\r\n                    了解更多\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nTreeInfoWindow.propTypes = {\r\n    tree: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        chineseTreeName: PropTypes.string,\r\n        englishTreeName: PropTypes.string,\r\n        scientificTreeName: PropTypes.string,\r\n        growthFrom: PropTypes.string,\r\n        season: PropTypes.string,\r\n        isCommon: PropTypes.bool,\r\n    }).isRequired,\r\n};\r\n\r\nTreeInfoWindow.defaultProps = {\r\n    tree: {\r\n        id: 0,\r\n        chineseTreeName: '克利巴椰子',\r\n        englishTreeName: 'Giriba Palm, Queen Palm',\r\n        scientificTreeName: 'Syagrus romanzoffiana',\r\n        growthFrom: '喬木',\r\n        season: 'spring',\r\n        isCommon: true,\r\n    }\r\n};\r\nexport default TreeInfoWindow","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m288.134 497h-64.268c-8.284 0-15-6.716-15-15v-91.94c0-8.284 6.716-15 15-15h64.268c8.284 0 15 6.716 15 15v91.94c0 8.284-6.716 15-15 15z\",\n  fill: \"#d26432\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m303.134 482v-91.94c0-8.284-6.716-15-15-15h-32.134v121.94h32.134c8.284 0 15-6.716 15-15z\",\n  fill: \"#a54628\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 415.6c-19.251 0-37.833-8.272-49.922-21.487-17.081 5.394-37.308 3.265-53.978-6.358-16.666-9.621-28.624-26.075-32.492-43.567-17.489-3.864-33.944-15.819-43.57-32.486-9.624-16.671-11.751-36.901-6.352-53.984-13.213-12.093-21.486-30.675-21.486-49.918 0-19.247 8.271-37.83 21.485-49.924-5.401-17.081-3.274-37.311 6.353-53.979 9.624-16.67 26.079-28.629 43.57-32.494 3.868-17.492 15.826-33.946 32.491-43.567 16.666-9.621 36.894-11.749 53.978-6.351 12.087-13.214 30.669-21.485 49.923-21.485s37.836 8.271 49.923 21.485c17.084-5.397 37.311-3.271 53.977 6.351s28.624 26.076 32.492 43.568c17.492 3.863 33.946 15.822 43.572 32.497 9.625 16.665 11.752 36.894 6.351 53.975 13.214 12.094 21.485 30.677 21.485 49.924 0 19.243-8.272 37.825-21.486 49.918 5.399 17.083 3.272 37.313-6.351 53.982-9.626 16.668-26.083 28.624-43.571 32.488-3.868 17.492-15.826 33.947-32.492 43.567-16.669 9.623-36.897 11.752-53.978 6.358-12.09 13.216-30.671 21.487-49.922 21.487z\",\n  fill: \"#87e752\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 415.6v-415.6c19.254 0 37.836 8.271 49.923 21.485 17.084-5.397 37.311-3.271 53.977 6.351s28.624 26.076 32.492 43.568c17.492 3.863 33.946 15.822 43.572 32.497 9.625 16.665 11.752 36.894 6.351 53.975 13.214 12.094 21.485 30.677 21.485 49.924 0 19.243-8.272 37.825-21.486 49.918 5.399 17.083 3.272 37.313-6.351 53.982-9.626 16.668-26.083 28.624-43.571 32.488-3.868 17.492-15.826 33.947-32.492 43.567-16.669 9.623-36.897 11.752-53.978 6.358-12.09 13.216-30.671 21.487-49.922 21.487z\",\n  fill: \"#4ec95f\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m368.467 512h-224.934c-8.284 0-15-6.716-15-15s6.716-15 15-15h224.934c8.284 0 15 6.716 15 15s-6.716 15-15 15z\",\n  fill: \"#c8ff50\"\n}), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m160.667 159.6c-8.284 0-15-6.716-15-15 0-25.989 21.144-47.133 47.133-47.133 8.284 0 15 6.716 15 15s-6.716 15-15 15c-9.447 0-17.133 7.686-17.133 17.133 0 8.284-6.716 15-15 15z\",\n  fill: \"#4ec95f\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m192.8 318.133c-25.989 0-47.133-21.144-47.133-47.133 0-8.284 6.716-15 15-15s15 6.716 15 15c0 9.447 7.686 17.133 17.133 17.133 8.284 0 15 6.716 15 15s-6.716 15-15 15z\",\n  fill: \"#4ec95f\"\n}), /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#14aa6b\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m351.333 159.6c-8.284 0-15-6.716-15-15 0-9.447-7.686-17.133-17.133-17.133-8.284 0-15-6.716-15-15s6.716-15 15-15c25.989 0 47.133 21.144 47.133 47.133 0 8.284-6.716 15-15 15z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m319.2 318.133c-8.284 0-15-6.716-15-15s6.716-15 15-15c9.447 0 17.133-7.686 17.133-17.133 0-8.284 6.716-15 15-15s15 6.716 15 15c0 25.989-21.144 47.133-47.133 47.133z\"\n}))), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m383.467 497c0-8.284-6.716-15-15-15h-112.467v30h112.467c8.284 0 15-6.716 15-15z\",\n  fill: \"#87e752\"\n}));\n\nvar SvgTree = function SvgTree(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    enableBackground: \"new 0 0 512 512\",\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTree, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/tree.ef3cb157.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\n\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { ReactComponent as TreeSvg } from '../img/tree.svg';\r\n\r\nfunction TreeIcon(props) {\r\n    return (\r\n        <SvgIcon\r\n            component={TreeSvg}\r\n            viewBox=\"0 0 600 476.6\"\r\n            {...props}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TreeIcon","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport TreeInfoWindow from './TreeInfoWindow'\r\nimport PropTypes from 'prop-types';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport TreeIcon from './TreeIcon';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    marker: {\r\n        cursor: 'pointer',\r\n\r\n    },\r\n})\r\n\r\n\r\n\r\n// Marker component\r\nfunction TreeMarker({ show, tree, onDonateClick, onLearnMoreClick }) {\r\n    const classes = useStyles()\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const id = open ? 'transitions-popper' : undefined;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOpen(true)\r\n        onLearnMoreClick(tree)\r\n    };\r\n    const handleMouseEnter = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n        setOpen(true)\r\n    }\r\n    const handleMouseLeave = (event) => {\r\n        setAnchorEl(null)\r\n        setOpen(false)\r\n    }\r\n\r\n    if (!show) {\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onMouseLeave={handleMouseLeave}\r\n        >\r\n\r\n\r\n            <TreeIcon\r\n                className={classes.marker}\r\n                color={open ? \"secondary\" : \"primary\"}\r\n                onClick={handleClick}\r\n                onMouseEnter={handleMouseEnter}\r\n            />\r\n\r\n            <Popper id={id} open={open} anchorEl={anchorEl} transition={true}>\r\n                {({ TransitionProps }) => (\r\n                    <Fade {...TransitionProps} >\r\n                        <div>\r\n                            <TreeInfoWindow\r\n                                tree={tree}\r\n                                onMouseLeave={handleMouseLeave}\r\n                                onDonateClick={onDonateClick}\r\n                                onLearnMoreClick={onLearnMoreClick}\r\n                            />\r\n                        </div>\r\n                    </Fade>\r\n                )}\r\n            </Popper>\r\n        </div>\r\n    );\r\n};\r\n\r\nTreeMarker.propTypes = {\r\n    show: PropTypes.bool,\r\n    place: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        formatted_address: PropTypes.string,\r\n        rating: PropTypes.number,\r\n        types: PropTypes.array,\r\n        price_level: PropTypes.number,\r\n        opening_hours: PropTypes.object,\r\n    }).isRequired,\r\n};\r\n\r\n\r\nexport default TreeMarker","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function AddressForm() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                基本資訊\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        label=\"First name\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        label=\"Last name\"\r\n                        fullWidth\r\n                        autoComplete=\"family-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"address1\"\r\n                        name=\"address1\"\r\n                        label=\"Address line 1\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-line1\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        id=\"address2\"\r\n                        name=\"address2\"\r\n                        label=\"Address line 2\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-line2\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-level2\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"zip\"\r\n                        name=\"zip\"\r\n                        label=\"Zip / Postal code\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping postal-code\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        label=\"Country\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping country\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                        label=\"付款地址使用相同的地址\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function PaymentForm() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                付款方式\r\n      </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField required id=\"cardName\" label=\"Name on card\" fullWidth autoComplete=\"cc-name\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"cardNumber\"\r\n                        label=\"Card number\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-number\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth autoComplete=\"cc-exp\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"cvv\"\r\n                        label=\"CVV\"\r\n                        helperText=\"Last three digits on signature strip\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-csc\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n                        label=\"記住付款資訊\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst addresses = ['106', '台大', '男一', '333'];\r\nconst payments = [\r\n    { name: 'Card type', detail: 'Visa' },\r\n    { name: 'Card holder', detail: 'Mr John Smith' },\r\n    { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n    { name: 'Expiry date', detail: '04/2024' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItem: {\r\n        padding: theme.spacing(1, 0),\r\n    },\r\n    total: {\r\n        fontWeight: 700,\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Review({ tree }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                認養總結\r\n      </Typography>\r\n            <List disablePadding>\r\n\r\n                <ListItem className={classes.listItem} key={tree.chineseTreeName}>\r\n                    <ListItemText primary={tree.chineseTreeName} secondary={\"M12493-325r\"} />\r\n                    < Typography variant=\"body2\">$3999</Typography>\r\n                </ListItem>\r\n\r\n                <ListItem className={classes.listItem}>\r\n                    <ListItemText primary=\"Total\" />\r\n                    <Typography variant=\"subtitle1\" className={classes.total}>\r\n                        $3999\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                        基本資訊\r\n          </Typography>\r\n                    <Typography gutterBottom>紫芋</Typography>\r\n                    <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                        付款資訊\r\n          </Typography>\r\n                    <Grid container>\r\n                        {payments.map((payment) => (\r\n                            <React.Fragment key={payment.name}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.detail}</Typography>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst steps = ['基本資訊', '付款資訊', '確認'];\r\n\r\n\r\nfunction getStepContent(step, tree) {\r\n    switch (step) {\r\n        case 0:\r\n            return <AddressForm />;\r\n        case 1:\r\n            return <PaymentForm />;\r\n        case 2:\r\n            return <Review tree={tree} />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n}\r\n\r\n\r\nexport default function DonateDialog({ open, onClose, tree }) {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function handleClose() {\r\n        onClose()\r\n        setActiveStep(0)\r\n    }\r\n\r\n    return (\r\n\r\n        <Dialog className={classes.paper} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogContent>\r\n\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    認養樹木\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <React.Fragment>\r\n                    {activeStep === steps.length ? (\r\n                        <React.Fragment>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                謝謝你的認養。\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                你的認養編碼是 #2001539。我們已經發送一封認養明細至你的電子郵件。\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    ) : (\r\n                            <React.Fragment>\r\n                                {getStepContent(activeStep, tree)}\r\n                                <div className={classes.buttons}>\r\n                                    {activeStep !== 0 && (\r\n                                        <Button onClick={handleBack} className={classes.button}>\r\n                                            上一步\r\n                                        </Button>\r\n                                    )}\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={handleNext}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        {activeStep === steps.length - 1 ? '認養' : '下一步'}\r\n                                    </Button>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                </React.Fragment>\r\n            </DialogContent>\r\n\r\n        </Dialog>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport isEmpty from 'lodash.isempty';\r\n\r\n// examples:\r\nimport GoogleMap from './GoogleMap';\r\n\r\n// component\r\n\r\n// my component\r\nimport TreeMarker from './TreeMarker'\r\nimport DonateDialog from './DonateDialog'\r\n\r\nconst ntuLocation = {\r\n    center: {\r\n        lat: 25.017319,\r\n        lng: 121.538977\r\n    },\r\n    zoom: 16,\r\n}\r\nconst NTU_CENTER = [25.017319, 121.538977]\r\n\r\nfunction TreeMap({ trees, onLearnMoreClick }) {\r\n\r\n\r\n    // // onChildClick callback can take two arguments: key and childProps\r\n    // function onChildClickCallback(key) {\r\n    //     const index = trees.findIndex(e => e.id === key);\r\n    //     let newTrees = trees\r\n    //     newTrees[index].show = !newTrees[index].show; // eslint-disable-line no-param-reassign\r\n    //     setTrees(newTrees)\r\n    // };\r\n\r\n    // function onChildMouseEnterCallback(key) {\r\n    //     const index = trees.findIndex(e => e.id === key);\r\n    //     let newTrees = trees\r\n    //     newTrees[index].show = true // eslint-disable-line no-param-reassign\r\n    //     console.log(newTrees)\r\n    //     setTrees(newTrees)\r\n    // };\r\n\r\n    // function onChildMouseLeaveCallback(key) {\r\n    //     const index = trees.findIndex(e => e.id === key);\r\n    //     let newTrees = trees\r\n    //     newTrees[index].show = false // eslint-disable-line no-param-reassign\r\n    //     console.log(newTrees)\r\n    //     setTrees(newTrees)\r\n    // };\r\n    const [donate, setDonate] = useState(false)\r\n    const [donatedTree, setDonatedTree] = useState(null)\r\n    function donateTree(tree) {\r\n        setDonatedTree(tree)\r\n        setDonate(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GoogleMap\r\n                defaultZoom={ntuLocation.zoom}\r\n                defaultCenter={NTU_CENTER}\r\n            >\r\n                {!isEmpty(trees) && trees.map(tree =>\r\n                    (<TreeMarker\r\n                        key={tree.id}\r\n                        lat={tree.lat}\r\n                        lng={tree.lng}\r\n                        show={true}\r\n                        tree={tree}\r\n                        onDonateClick={donateTree}\r\n                        onLearnMoreClick={onLearnMoreClick}\r\n                    />))}\r\n            </GoogleMap>\r\n            <DonateDialog open={donate} tree={donatedTree} onClose={() => setDonate(false)} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TreeMap;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport capitalize from 'lodash/capitalize'\r\n\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    speedDial: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.speedDial + 1,\r\n        pointerEvents: 'none',\r\n    },\r\n}));\r\n\r\nconst speedDialSelected = {\r\n    zIndex: 1052,\r\n}\r\n\r\nexport default function SpeedDials({ icon, type, actions, onActionClick }) {\r\n    const classes = useStyles();\r\n    const [direction, setDirection] = React.useState('right');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [hidden, setHidden] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClick = (e, actionValue) => {\r\n        onActionClick({ type: type + capitalize(actionValue), value: \"on\" })\r\n    }\r\n    return (\r\n        <>\r\n            <Backdrop\r\n                className={classes.backdrop}\r\n                open={open}\r\n            />\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial example\"\r\n                className={classes.speedDial}\r\n                style={open ? speedDialSelected : null}\r\n                hidden={hidden}\r\n                icon={icon}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                open={open}\r\n                direction={direction}\r\n                FabProps={{\r\n                    variant: true ? \"extended\" : \"round\",\r\n                    children: \"asdsadasd\",\r\n                    color: 'secondary',\r\n                    onClick: (e) => handleClick(e, actions[0].value),\r\n\r\n                }}\r\n            >\r\n                {actions.map((action) => (\r\n                    <SpeedDialAction\r\n                        key={action.name}\r\n                        icon={action.icon}\r\n                        tooltipTitle={action.name}\r\n                        onClick={(e) => handleClick(e, action.value)}\r\n                    />\r\n                ))}\r\n            </SpeedDial>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nSpeedDials.defaultProps = {\r\n    actions: [],\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        width: 48,\r\n        height: 48,\r\n        marginRight: theme.spacing(1),\r\n    }\r\n\r\n}));\r\n\r\nfunction Logo(props) {\r\n    const classes = useStyles()\r\n    return (\r\n        <img\r\n            {...props}\r\n            className={classes.logo}\r\n            alt=\"tree logo\"\r\n            src=\"https://image.flaticon.com/icons/png/512/2990/2990684.png\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default Logo","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// components\r\nimport NatureIcon from '@material-ui/icons/Nature'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { lightBlue, deepOrange, amber, red } from '@material-ui/core/colors';\r\n\r\n// season icons\r\nimport EcoIcon from '@material-ui/icons/EcoOutlined';\r\nimport SpaIcon from '@material-ui/icons/SpaOutlined';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunnyOutlined';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnitOutlined';\r\n\r\n// area icons\r\nimport StreetviewIcon from '@material-ui/icons/Streetview';\r\nimport OpacityIcon from '@material-ui/icons/Opacity';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCityOutlined';\r\nimport LocalHospitalOutlinedIcon from '@material-ui/icons/LocalHospitalOutlined';\r\n\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n// my components\r\nimport SpeedDials from './SpeedDials'\r\nimport { Typography } from '@material-ui/core';\r\nimport Logo from './Logo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        width: 'auto',\r\n        height: 'auto',\r\n        padding: theme.spacing(1, 3),\r\n        borderRadius: 64,\r\n        zIndex: 100,\r\n        color: theme.palette.primary.contrastText,\r\n    },\r\n    floatingNavgationBar: {\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        marginTop: theme.spacing(2),\r\n        marginLeft: theme.spacing(2),\r\n    },\r\n    titleLogo: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        color: theme.palette.accent.main\r\n    }\r\n\r\n}));\r\n\r\nexport default function FloatingNavgationBar({ filter, onFilterChange }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.floatingNavgationBar}>\r\n            <Zoom in={true}>\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    color=\"primary\"\r\n                    aria-label=\"title\"\r\n                    className={classes.title}\r\n                    onClick={() => onFilterChange({ type: 'all', value: 'on' })}\r\n                >\r\n                    {/* <NatureIcon /> */}\r\n                    <Logo className={classes.titleLogo} />\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                    >\r\n                        護樹臺大\r\n                    </Typography>\r\n                </Fab>\r\n            </Zoom>\r\n            <SpeedDials\r\n                type=\"common\"\r\n                icon={<NatureIcon className={classes.icon} />}\r\n                onActionClick={onFilterChange}\r\n                actions={[\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '大王椰子' },\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '樟樹' },\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '白千層' },\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '正榕' },\r\n                    { icon: <NatureIcon color=\"primary\" />, name: '臺灣欒樹' },\r\n                ]}\r\n            />\r\n            <SpeedDials\r\n                type=\"season\"\r\n                icon={<EcoIcon className={classes.icon} />}\r\n                onActionClick={onFilterChange}\r\n                actions={[\r\n                    { icon: <EcoIcon color=\"primary\" />, name: '春天', value: 'spring' },\r\n                    { icon: <WbSunnyIcon style={{ color: amber[700] }} />, name: '夏天', value: 'summer' },\r\n                    { icon: <SpaIcon style={{ color: deepOrange[700] }} />, name: '秋天', value: 'autumn' },\r\n                    { icon: <AcUnitIcon style={{ color: lightBlue[500] }} />, name: '冬天', value: 'winter' },\r\n                ]}\r\n            />\r\n            <SpeedDials\r\n                type=\"area\"\r\n                icon={<StreetviewIcon className={classes.icon} />}\r\n                onActionClick={onFilterChange}\r\n                actions={[\r\n                    { icon: <LocationCityIcon style={{ color: deepOrange[200] }} />, name: '總區' },\r\n                    { icon: <OpacityIcon style={{ color: lightBlue[500] }} />, name: '水源' },\r\n                    { icon: <LocalHospitalOutlinedIcon style={{ color: red[500] }} />, name: '城中' },\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport $ from \"jquery\";\r\n\r\n// components\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n// icons\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport HeightIcon from '@material-ui/icons/Height';\r\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\nimport PowerInputIcon from '@material-ui/icons/PowerInput';\r\nimport StyleIcon from '@material-ui/icons/Style';\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport EcoIcon from '@material-ui/icons/EcoOutlined';\r\n\r\n// carousel\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n// lazyload placeholder\r\nimport Image from 'material-ui-image'\r\n\r\n// my components\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    detail: {\r\n        marginTop: theme.spacing(2),\r\n        // width: 400,\r\n        // maxWidth: '90vw',\r\n\r\n    },\r\n    divider: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    icon: {\r\n        color: theme.palette.primary.main\r\n    },\r\n    treeDetail: {\r\n        // height: 60,\r\n        // marginBottom: 16,\r\n        textOverflow: 'normal',\r\n    }\r\n\r\n}));\r\n\r\nfunction SimpleListItem({ button = false, icon, color = \"primary\", primary }) {\r\n    const classes = useStyles()\r\n    return (\r\n        <ListItem button={button}>\r\n            <ListItemIcon className={classes.icon}>\r\n                {icon}\r\n            </ListItemIcon>\r\n            <ListItemText primary={primary} />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\n\r\nexport default function TreeDetail({ tree }) {\r\n    const classes = useStyles();\r\n\r\n    const treeDetailFallback = `${tree.chineseTreeName}是一種${tree.growthFrom}，樹必定會成為未來世界的新標準。 我們不得不面對一個非常尷尬的事實，那就是，領悟其中的道理也不是那麼的困難。`\r\n\r\n    const [treeDetail, setTreeDetail] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const proxyurl = \"https://damp-cliffs-64400.herokuapp.com/\";\r\n        fetch(proxyurl + `https://zh.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${tree.scientificTreeName}`)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json()\r\n                }\r\n                throw new Error('error getting tree detail')\r\n            })\r\n            .then(jsonResponse => {\r\n                let newTreeDetail = jsonResponse.query.pages[Object.keys(jsonResponse.query.pages)[0]].extract\r\n                const treeDetailLimit = 200\r\n                newTreeDetail = newTreeDetail.substring(0, treeDetailLimit)\r\n                setTreeDetail(newTreeDetail)\r\n            })\r\n            .catch(e => {\r\n                setTreeDetail(treeDetailFallback)\r\n                console.log(e)\r\n            })\r\n    })\r\n\r\n    useEffect(() => {\r\n        $(function () {\r\n            let len = 100; // 超過50個字以\"...\"取代\r\n            $(\".dotdotdot\").each(function (i) {\r\n                if ($(this).text().length > len) {\r\n                    $(this).attr(\"title\", $(this).text());\r\n                    let text = $(this).text().substring(0, len - 1) + \"......\";\r\n                    $(this).text(text);\r\n                }\r\n            });\r\n        });\r\n    }, [treeDetail])\r\n\r\n    return (\r\n        <div>\r\n            <Carousel\r\n                height=\"225px\"\r\n                showStatus={false}\r\n                showThumbs={false}\r\n                centerMode\r\n                swipeable\r\n            >\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 0}`}\r\n                />\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 1}`}\r\n                />\r\n                <Image\r\n                    aspectRatio={(16 / 9)}\r\n                    alt={tree.chineseTreeName}\r\n                    disableSpinner\r\n                    src={`https://source.unsplash.com/345x200/?tree?${tree.id + 2}`}\r\n                />\r\n            </Carousel>\r\n\r\n            <Container\r\n                className={classes.detail}\r\n                role=\"presentation\"\r\n            >\r\n                <Typography gutterBottom variant=\"h5\">\r\n                    {tree.chineseTreeName + \" \" + tree.englishTreeName.split(',')[0]}\r\n                </Typography>\r\n\r\n                <div className={classes.treeDetail}>\r\n                    <Typography className=\"dotdotdot\" variant=\"body2\" color=\"textSecondary\" paragraph>\r\n                        {treeDetail}\r\n                    </Typography>\r\n                </div>\r\n\r\n                <Divider className={classes.divider} />\r\n\r\n                <Typography variant=\"subtitle2\">\r\n                    樹木資訊\r\n                </Typography>\r\n                <List dense aria-label=\"tree-detail\">\r\n                    <SimpleListItem\r\n                        button={true}\r\n                        icon={<LocalOfferIcon className={classes.icon} />}\r\n                        primary={treePlaceholder.co}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<TodayIcon className={classes.icon} />}\r\n                        primary={`調查時間：${treePlaceholder.createTime}`}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<HeightIcon className={classes.icon} />}\r\n                        primary={`樹高：${treePlaceholder.treeHeight}`}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<ZoomOutMapIcon className={classes.icon} />}\r\n                        primary={`樹冠幅：${treePlaceholder.treeCrownHeight}`}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<PowerInputIcon className={classes.icon} />}\r\n                        primary={`胸徑：${treePlaceholder.treePath}`}\r\n                    />\r\n                    <SimpleListItem\r\n                        icon={<RotateLeftIcon className={classes.icon} />}\r\n                        primary={`周長：${treePlaceholder.treePerimeter}`}\r\n                    />\r\n                </List>\r\n\r\n                <Divider className={classes.divider} />\r\n\r\n                <Typography variant=\"subtitle2\">\r\n                    樹種小百科\r\n                </Typography>\r\n                <List aria-label=\"tree-catagory-info\">\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <StyleIcon className={classes.icon} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary={tree.growthFrom}\r\n                        />\r\n                    </ListItem>\r\n                    <ListItem >\r\n                        <ListItemIcon>\r\n                            <TranslateIcon className={classes.icon} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"英文名\"\r\n                            secondary={tree.englishTreeName}\r\n                        />\r\n                    </ListItem>\r\n                    <ListItem >\r\n                        <ListItemIcon>\r\n                            <MenuBookIcon className={classes.icon} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"學名\"\r\n                            secondary={tree.scientificTreeName}\r\n                        />\r\n                    </ListItem>\r\n                    <SimpleListItem\r\n                        button={true}\r\n                        icon={<EcoIcon className={classes.icon} />}\r\n                        primary={determineSeason(tree)}\r\n                    />\r\n                </List>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction determineSeason(tree) {\r\n    if (tree.seasonSpring === \"on\") {\r\n        return '春季'\r\n    } else if (tree.seasonSummer === \"on\") {\r\n        return '夏季'\r\n    } else if (tree.seasonSummer === \"on\") {\r\n        return '秋季'\r\n    } else if (tree.seasonSummer === \"on\") {\r\n        return '冬季'\r\n    } else {\r\n        return '非季節性'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst treePlaceholder = {\r\n    id: 0,\r\n    chineseTreeName: '克利巴椰子',\r\n    englishTreeName: 'Giriba Palm, Queen Palm',\r\n    scientificTreeName: 'Syagrus romanzoffiana',\r\n    growthFrom: '喬木',\r\n    season: 'spring',\r\n    isCommon: true,\r\n    co: \"N 1-10_0205\",\r\n    createTime: \"2012-05-06T02:23:11.000Z\",\r\n    treeHeight: \"11.24\",\r\n    treeCrownHeight: \"11.4728\",\r\n    treePath: \"29.921\",\r\n    treePerimeter: \"94\",\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\n\r\n\r\n// my components\r\nimport TreeDetail from './TreeDetail'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: 400,\r\n        maxWidth: '90vw',\r\n    },\r\n}))\r\n\r\nexport default function TreeDetailDrawer({ open, onClose, tree }) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    if (tree === null) {\r\n        return <></>\r\n    }\r\n    return (\r\n        <div>\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={open}\r\n                onClose={onClose}\r\n            >\r\n                <div className={classes.drawer}>\r\n                    <TreeDetail tree={tree} />\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nTreeDetailDrawer.propTypes = {\r\n    tree: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        chineseTreeName: PropTypes.string,\r\n        englishTreeName: PropTypes.string,\r\n        scientificTreeName: PropTypes.string,\r\n        growthFrom: PropTypes.string,\r\n        season: PropTypes.string,\r\n        isCommon: PropTypes.bool,\r\n    }).isRequired,\r\n};\r\n\r\nTreeDetailDrawer.defaultProps = {\r\n    tree: {\r\n        id: 0,\r\n        chineseTreeName: '克利巴椰子',\r\n        englishTreeName: 'Giriba Palm, Queen Palm',\r\n        scientificTreeName: 'Syagrus romanzoffiana',\r\n        growthFrom: '喬木',\r\n        season: 'spring',\r\n        isCommon: true,\r\n        co: \"N 1-10_0205\",\r\n        createTime: \"2012-05-06T02:23:11.000Z\",\r\n        treeHeight: \"11.24\",\r\n        treeCrownHeight: \"11.4728\",\r\n        treePath: \"29.921\",\r\n        treePerimeter: \"94\",\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from './theme'\r\n\r\n// style\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// components \r\nimport Box from '@material-ui/core/Box'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n// my components\r\nimport TreeMap from './components/TreeMap';\r\nimport FloatingNavgationBar from './components/FloatingNavgationBar'\r\nimport TreeDetailDrawer from './components/TreeDetailDrawer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '100vw',\r\n\t\theight: '100vh',\r\n\t},\r\n\tmain: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t},\r\n\tbackdrop: {\r\n\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\tcolor: '#fff',\r\n\t}\r\n}));\r\n\r\nconst ntuLocation = {\r\n\tcenter: {\r\n\t\tlat: 25.017319,\r\n\t\tlng: 121.538977\r\n\t},\r\n\tzoom: 16,\r\n}\r\n\r\nfunction App() {\r\n\tconst classes = useStyles()\r\n\tconst [drawerOpen, setDrawerOpen] = useState(false)\r\n\tconst [selectedTree, setSelectedTree] = useState(null)\r\n\r\n\tconst [trees, setTrees] = useState([])\r\n\tconst [filter, setFilter] = useState({ type: \"all\", value: \"on\" })\r\n\tconst [error, setError] = useState(null)\r\n\tuseEffect(() => {\r\n\t\tsetTrees([])\r\n\r\n\t\tconst proxyurl = \"https://damp-cliffs-64400.herokuapp.com/\";\r\n\r\n\t\tfetch(proxyurl + 'https://map.ntu.edu.tw/ntutree/permitAll/treeDb/listAll')\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.ok) {\r\n\t\t\t\t\treturn response.json()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('get trees failed')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then((jsonResponse) => {\r\n\t\t\t\tlet newTrees = jsonResponse.rows\r\n\r\n\t\t\t\tif (filter.type !== 'all') {\r\n\t\t\t\t\tnewTrees = newTrees.filter(tree => {\r\n\t\t\t\t\t\tif (tree[filter.type] === filter.value) {\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tnewTrees = newTrees.slice(0, 50)\r\n\r\n\t\t\t\tnewTrees.forEach((tree) => {\r\n\t\t\t\t\ttree.lat = ntuLocation.center.lat + (Math.random() - 0.5) * 0.01\r\n\t\t\t\t\ttree.lng = ntuLocation.center.lng + (Math.random() - 0.5) * 0.01\r\n\t\t\t\t});\r\n\t\t\t\tsetTrees(newTrees)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetError(error.toString())\r\n\t\t\t})\r\n\t}, [filter])\r\n\r\n\tfunction openTreeDetail(tree) {\r\n\t\tsetDrawerOpen(true)\r\n\t\tsetSelectedTree(tree)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Box className={classes.root}>\r\n\t\t\t\t{/* <TreeAppBar /> */}\r\n\t\t\t\t<Box className={classes.main} component=\"main\">\r\n\t\t\t\t\t<FloatingNavgationBar\r\n\t\t\t\t\t\tfilter={filter}\r\n\t\t\t\t\t\tonFilterChange={(newFilter) => setFilter(newFilter)} />\r\n\t\t\t\t\t<TreeMap\r\n\t\t\t\t\t\tonLearnMoreClick={openTreeDetail}\r\n\t\t\t\t\t\ttrees={trees}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TreeDetailDrawer\r\n\t\t\t\t\t\topen={drawerOpen}\r\n\t\t\t\t\t\tonClose={() => setDrawerOpen(false)}\r\n\t\t\t\t\t\ttree={selectedTree}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Backdrop className={classes.backdrop} open={trees.length === 0}>\r\n\t\t\t\t<CircularProgress color=\"primary\" />\r\n\t\t\t</Backdrop>\r\n\t\t\t<Snackbar open={error} autoHideDuration={4000} onClose={() => setError(null)}>\r\n\t\t\t\t<Alert onClose={() => setError(null)} severity=\"error\">\r\n\t\t\t\t\t{error}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</ThemeProvider>\r\n\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}